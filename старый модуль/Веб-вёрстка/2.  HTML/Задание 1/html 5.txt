Универсальные атрибуты
Универсальные атрибуты применяются практически ко всем элементам HTML, поэтому выделены в отдельную группу, чтобы не повторять их для каждого элемента.

accesskey
Позволяет получить доступ к элементу с помощью заданного сочетания клавиш.

class
Определяет имя класса, которое позволяет связать элемент со стилевым оформлением.

contenteditable
Сообщает, что элемент доступен для редактирования пользователем.

contextmenu
Устанавливает контекстное меню для элемента.

data-*
Позволяет создавать свои атрибуты для хранения произвольной информации.

dir
Задаёт направление и отображение текста — слева направо или справа налево.

draggable
Указывает, можно ли перетаскивать элемент используя Drag and Drop API.

dropzone
Определяет, что делать с перетаскиваемыми пользователем данными — скопировать их, перетащить или связать.

hidden
Скрывает содержимое элемента от просмотра.

id
Указывает имя стилевого идентификатора.

itemid
Определяет уникальный глобальный идентификатор элемента для микроданных.

itemprop
Используется для добавления свойств словаря микроданных к элементу.

itemref
Связывает свойства элемента с атрибутом itemscope.

itemscope
Задаёт область действия словаря в структуре данных.

itemtype
Указывает адрес словаря, который будет применяться для определения свойств элемента в структуре данных.

lang
Браузер использует значение атрибута для правильного отображения некоторых национальных символов.

spellcheck
Указывает браузеру проверять или нет правописание и грамматику в тексте.

style
Применяется для определения стиля элемента с помощью правил CSS.

tabindex
Устанавливает порядок получения фокуса при переходе между элементами с помощью клавиши Tab.

title
Описывает содержимое элемента в виде всплывающей подсказки.



************************************************************************
Элемент <article> (от англ. article — статья) представляет собой независимый фрагмент веб-страницы и, как правило, включает «шапку», основное содержимое и «подвал», в которых располагаются такие части, как заголовок, текст, имя автора, дата публикации, метки, рейтинг статьи и др. <article> обычно применяется для статей сайта, сообщений блога и форума, комментариев.

Внутри <article> запрещено использовать элемент <main>.

Каждый элемент <article> обязательно должен содержать заголовок через <h1>,…,<h6>.

Атрибуты Универсальные + события JS
************************************************************************

************************************************************************
<aside>
Содержание
Элемент <aside> (от англ. aside — в стороне, отступление) представляет собой раздел страницы, который имеет косвенное отношение к содержимому страницы и может быть рассмотрен отдельно от этого содержимого. <aside> применяется для боковых панелей, рекламных блоков, ссылок на архив, меток и другой информации, которая отделена от основного содержимого страницы.
Атрибуты Универсальные + события JS
************************************************************************

************************************************************************
<audio>
Содержание
Элемент <audio> (от англ. audio — звук) добавляет, воспроизводит и управляет настройками аудиозаписи на веб-странице. Путь к файлу задаётся через атрибут src или вложенный элемент <source>. Внутри контейнера <audio> можно написать текст, который будет выводиться в браузерах, не работающих с этим элементом.

Атрибуты
autoplay
Звук начинает играть сразу после загрузки страницы.
controls
Добавляет панель управления к аудиофайлу.
loop
Повторяет воспроизведение звука с начала после его завершения.
muted
Отключает звук при воспроизведении музыки.
preload
Используется для предварительной загрузки аудиофайла или его данных вместе с загрузкой веб-страницы.
src
Указывает путь к воспроизводимому файлу.
************************************************************************

************************************************************************
<bdi>
Содержание
Элемент <bdi> (от англ. bidirectional isolate — изоляция двунаправленности) указывает фрагмент текста, который должен быть изолирован от изменения направления вывода текста. Такое поведение важно для текстов, одновременно содержащих разные языки, читающихся слева направо и справа налево.
Атрибуты Универсальные + события JS
************************************************************************

************************************************************************
<canvas>
Содержание
Элемент <canvas> (от англ. canvas — холст, полотно) создаёт область, в которой при помощи JavaScript можно рисовать разные объекты, выводить изображения, трансформировать их и менять свойства. При помощи <canvas> можно создавать рисунки, анимацию, игры и др.

Атрибуты
height
Задаёт высоту холста. По умолчанию 300 пикселей.
width
Задаёт ширину холста. По умолчанию 150 пикселей.
Также для этого элемента доступны универсальные атрибуты и события.
************************************************************************

************************************************************************
<data>
Содержание
Представляет содержимое в машиночитаемом виде, предназначенное для внешних автоматизированных систем или скриптов на самом сайте. Внутри <data>(от англ. data — данные) , к примеру, может храниться идентификатор товара, но никак не дата или время.

Атрибуты
value
Устанавливает значение атрибута в машиночитаемой форме. 
Также для этого элемента доступны универсальные атрибуты.
************************************************************************

************************************************************************
<details>
Содержание
Элемент <details> (от англ. details — подробности, данные) используется для хранения информации, которую можно скрыть или показать по требованию пользователя. По умолчанию содержимое элемента не отображается, для изменения статуса применяется атрибут open.

Исходно содержимое <details> скрыто, вместо него выводится текст «Подробнее», щелчок по которому прячет или показывает содержимое элемента.

Атрибуты
open
Показывает информацию внутри элемента.
************************************************************************

************************************************************************
<dialog>
Содержание
Элемент <dialog> (от англ. dialog — диалог) создаёт диалоговое окно, в котором можно выводить сообщение или форму, например, для входа на сайт.

Диалоговое окно отображается со следующим предустановленным стилем.

Атрибуты
open
Отображает диалоговое окно. Без этого атрибута в стилях к нему добавляется display: none и окно не выводится в браузере.
Для этого элемента также доступны универсальные атрибуты и события.
************************************************************************

************************************************************************
<figcaption>
Содержание
Содержит описание для элемента <figure>. <figcaption> (от англ. figure caption — подпись к рисунку) должен быть первым или последним элементом в группе.

************************************************************************

************************************************************************
<figure>
Содержание
Используется для группирования любых элементов, например, изображений и подписей к ним. <figure> (от англ. figure — рисунок, иллюстрация) не должен быть связан непосредственно с основным содержимым документа и при его перемещении в другое место смысл текста не должен меняться. Обычно применяется для иллюстраций, фрагментов кода, схем, графиков, диаграмм и др.

************************************************************************

************************************************************************
<mark>
Содержание
Элемент <mark> (от англ. mark — пометка) помечает текст как выделенный. В браузере фоновый цвет текста внутри <mark> выделяется жёлтым цветом.

Авторы обычно используют <mark> для привлечения внимания читателя к части текста. Заметьте, что такой текст ничего не говорит о важности выделенного фрагмента, а лишь предлагает обратить на него внимание.
************************************************************************

************************************************************************
<menu>
Содержание
Элемент <menu> (от англ. menu — меню) предназначен для отображения списка пунктов меню. Аналогично элементам <ol> и <ul> внутри контейнера <menu> список формируется с помощью <li>.

В HTML4 элемент <menu> вышел из употребления, вместо него рекомендуется использовать <ul>. В HTML5 элемент <menu> вновь включен, но уже в другом качестве. Теперь он выступает контейнером для элемента <command> и создания меню.

Атрибуты
label
Устанавливает видимую метку для меню.
type
Задаёт тип меню.
************************************************************************

************************************************************************
<meter>
Содержание
Используется для вывода значения в некотором известном диапазоне. Применяется преимущественно для отображения числовых значений, например, количества результатов поиска, объёма жидкости, давления и др.

Браузеры, которые поддерживают элемент <meter>(от англ. meter — измеритель, счётчик), отображают значение в виде рисунка, на котором цветом помечается текущее значение в указанном диапазоне. Остальные браузеры выводят текст, написанный внутри <meter>.

Атрибуты
value
Устанавливает значение. 
min
Задаёт минимально возможное значение.
max
Задаёт максимально возможное значение.
low
Определяет предел, при достижении которого значение считается низким.
high
Определяет предел, при достижении которого значение считается высоким.
optimum
Определяет наилучшее или оптимальное значение.
************************************************************************

************************************************************************
<output>
Содержание
Определяет область, в которую выводится информация, преимущественно с помощью скриптов.

Атрибуты
for
Определяет идентификатор одного и более элементов для связывания с элементом <output>.
form
Задаёт имя формы, которой принадлежит область для вывода.
name
Задаёт уникальное имя элемента.
************************************************************************

************************************************************************
<progress>
Содержание
Используется для отображения прогресса завершённости задачи. Изменение значения происходит через JavaScript.

Вид элемента зависит от браузера и операционной системы и может довольно сильно различаться между собой.

Атрибуты
value
Текущее значение прогресса.
max
Максимальное значение прогресса.
************************************************************************

************************************************************************
<time>
Содержание
Помечает текст внутри элемента <time> (от англ. time — время) как дата, время или оба значения. Может указываться непосредственно внутри контейнера <time>, либо задаваться через атрибут datetime.

Атрибуты
datetime
Задаёт дату, время или оба значения для текста.
pubdate
Указывает дату публикации документа. 
************************************************************************

************************************************************************
<ruby>
Содержание
Элемент <ruby> (от англ. ruby — рубин) предназначен для добавления небольшой аннотации сверху или снизу от заданного текста. Такая форма записи преимущественно используется для идеографической письменности вроде китайского языка, но может применяться и для других языков, если требуется написать один текст над другим.

Сам элемент <ruby> выступает контейнером для <rt>, он и формирует аннотацию к тексту, после которого идёт; а также <rp>, этот элемент предназначен для браузеров, которые не поддерживают <ruby>.

Название происходит от слова «рубин», которым в типографии обозначается небольшой шрифт.
************************************************************************

************************************************************************
<track>
Содержание
Элемент <track> (от англ. track — дорожка) позволяет авторам указать текстовую дорожку для медийных элементов <audio> и <video>. Такая дорожка обычно содержит субтитры на разных языках, комментарии, заголовки и др.

Атрибуты
kind
Указывает тип дорожки, возможные варианты перечислены в табл. 1.
src
Путь к файлу с дорожкой.
srclang
Язык дорожки. См. коды языков.
label
Отображаемое название дорожки. Если этот атрибут не указан, браузер станет использовать значение, которое применяется у него по умолчанию, например «untitled1».
default
Наличие этого атрибута указывает, что данная дорожка предпочтительна и должна быть выбрана по умолчанию. Только одна дорожка может иметь атрибут default.
************************************************************************

************************************************************************
Добавляет, воспроизводит и управляет настройками видеоролика на веб-странице. Путь к файлу задаётся через атрибут src или вложенный элемент <source>.

Атрибуты
autoplay
Видео начинает воспроизводиться автоматически после загрузки страницы.
controls
Добавляет панель управления к видеоролику.
height
Задаёт высоту области для воспроизведения видеоролика.
loop
Повторяет воспроизведение видео с начала после его завершения.
poster
Указывает адрес картинки, которая будет отображаться, пока видео не доступно или не воспроизводится.
preload
Используется для загрузки видео вместе с загрузкой веб-страницы.
src
Указывает путь к воспроизводимому видеоролику.
width
Задаёт ширину области для воспроизведения видеоролика.
************************************************************************

************************************************************************
<wbr>
Содержание
Элемент <wbr> (от англ. word break — перенос слов) указывает браузеру место, где допускается делать перенос строки в тексте, если этого требует ширина родительского элемента.
************************************************************************

************************************************************************
<summary>
Содержание
Указывает заголовок для <details>, по которому можно щёлкать для разворачивания/сворачивания информации. Элемент <summary> должен идти первым внутри <details>.
************************************************************************